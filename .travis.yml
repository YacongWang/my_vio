# For using Ubuntu 14.04
dist:
  - trusty
sudo:
  - required

language:
  - cpp
compiler:
  - g++

before_install:
  # -y is for confirming Yes to add the ppa
  - sudo add-apt-repository -y ppa:ubuntu-toolchain-r/test
  - sudo apt-get update

install:
  # For using c++11.
  - sudo apt-get install -y g++-4.9
  - sudo apt-get install -y build-essential
  - sudo apt-get install -y libgoogle-glog-dev libgflags-dev
  - sudo apt-get install -y libvtk5-dev
  - sudo apt-get install -y python2.7-dev

  # Update cmake for using target_include_directories
  - wget https://cmake.org/files/v3.7/cmake-3.7.2.tar.gz
  - tar xf cmake-3.7.2.tar.gz
  - cd cmake-3.7.2
  - ./configure
  - make
  - sudo make install
  - cd ..

  # Eigen
  # - sudo apt-get install -y libeigen3-dev
  - wget http://bitbucket.org/eigen/eigen/get/3.3.3.tar.gz
  - tar zxf 3.3.3.tar.gz
  - cd eigen-eigen-67e894c6cd8f
  - mkdir build
  - cd build
  - cmake ..
  - make
  - sudo make install
  - cd ..
  - cd ..

  # Gflags
  - git clone https://github.com/gflags/gflags.git
  - cd gflags
  - mkdir build
  - cd build
  - cmake ..
  - make
  - sudo make install
  - cd ..
  - cd ..

  # Build and install Ceres
  - sudo apt-get install -y libsuitesparse-dev
  - wget http://ceres-solver.org/ceres-solver-1.12.0.tar.gz
  - tar zxf ceres-solver-1.12.0.tar.gz
  - cd ceres-solver-1.12.0
  - mkdir build
  - cd build
  - cmake ..
  - make -j4
  - make test
  - sudo make install
  - cd ..
  - cd ..


  # OpenCV
  - sudo apt-get install -y cmake git libgtk2.0-dev pkg-config libavcodec-dev libavformat-dev libswscale-dev
  # Optional
  - sudo apt-get install -y python-dev python-numpy libtbb2 libtbb-dev libjpeg-dev libpng-dev libtiff-dev libjasper-dev libdc1394-22-dev
  #- curl -sL https://github.com/Itseez/opencv/archive/3.0.0-beta.zip > opencv.zip
  - curl -sL https://github.com/opencv/opencv/archive/3.2.0.zip > opencv.zip
  - unzip opencv.zip
  # Add contrib repo for sfm,xfeatures2d ... libs
  - git clone https://github.com/opencv/opencv_contrib.git
  - cd opencv-3.2.0
  - mkdir build
  - cd build
  - cmake .. -DOPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr/local -D WITH_VTK=ON WITH_TBB=OFF -D BUILD_NEW_PYTHON_SUPPORT=OFF -D WITH_V4L=OFF -D INSTALL_C_EXAMPLES=OFF -D INSTALL_PYTHON_EXAMPLES=OFF -D BUILD_EXAMPLES=OFF -D WITH_QT=OFF -D WITH_OPENGL=OFF -DBUILD_opencv_xphoto=OFF -DBUILD_opencv_xobjdetect=OFF -DBUILD_opencv_structured_light=OFF -DBUILD_opencv_aruco=OFF -DBUILD_opencv_text=OFF ..
  # 
  - make -j8
  - sudo make install
  - cd ..
  - cd ..

script:
  - ls -la /usr/bin | grep g++
  - sudo update-alternatives --install /usr/bin/g++ g++ /usr/bin/g++-4.9 1
  - g++ -v && cmake --version
  - mkdir build
  - cd build
  - cmake ..
  - make

  # Build tests
  - cmake .. -DUSE_TEST=ON
  - make
  #- make test
